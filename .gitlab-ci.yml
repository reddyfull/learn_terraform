# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
stages:
  - trigger
  - terraform

trigger_pipeline:
  stage: trigger
  script:
    - "curl -X POST --fail -F token=glptt-2002ca2b69e5ec91bd27d355211646614c750306 -F ref=main https://gitlab.com/api/v4/projects/47117778/trigger/pipeline"

terraform:
  stage: terraform
  image: hashicorp/terraform:latest
  script:
    - terraform init
    - terraform plan -out=tfplan
    - terraform apply -input=false tfplan
  only:
    - main
  variables:
    ARM_CLIENT_ID: $ARM_CLIENT_ID
    ARM_CLIENT_SECRET: $ARM_CLIENT_SECRET
    ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID: $ARM_TENANT_ID

